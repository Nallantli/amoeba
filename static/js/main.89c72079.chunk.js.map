{"version":3,"sources":["reportWebVitals.ts","ThemeSelector.tsx","Menu.tsx","AI.tsx","Space.tsx","Chunk.tsx","utils.tsx","GameState.tsx","ais/utils.tsx","ais/Fuzzy.tsx","ais/Elk.tsx","ais/ElkAtt.tsx","ais/ElkDef.tsx","ais/ElkSurf.tsx","ais/ElkTimid.tsx","ais/AttAndDef.tsx","Board.tsx","index.tsx","Game.tsx","assets/CircleIcon.tsx","assets/CrossIcon.tsx","assets/DiamondIcon.tsx","assets/SquareIcon.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultTheme","React","lazy","Win98Theme","ThemeSelector","props","Suspense","fallback","theme","children","Menu","state","tab","AISelectOptions","this","winLength","limit","delay","AINames","iconConfig","removeItem","index","newAINames","splice","setState","changeAI","value","canDelete","length","AIMenuOptions","Object","keys","id","className","onClick","type","defaultValue","onChange","e","parseInt","target","map","AIName","createElement","playerIcons","color","playerColors","selected","selectOption","PlayerItem","url","i","baseURL","window","location","href","split","assign","Component","AI","icon","pCount","_gameState","Error","Space","x","y","win","canPlayerMove","view","spaceSize","style","position","width","height","left","top","Chunk","chunkData","posX","posY","chunkX","chunkY","selectSquare","col","cell","detail","flatten","d","fib","n","horizontalCount","gameState","v","ps","getValue","push","verticalCount","diagonalUp","diagonalDown","chunk","Math","floor","undefined","getPlayerScores","isLimited","calculateLimitScore","players","placements","matches","forEach","placement","flag","removes","p","a","b","j","sharePoint","old","playerScores","m","filter","score","checkWin","moveLimit","check","squares","s","document","getElementById","classList","add","addChunk","turn","generateBorderChunks","countLine","dx","dy","contiguous","space","countLineOld","l","nx","ny","nx2","ny2","getRandomElement","array","random","Fuzzy","heatMap","find","h","mappings","Array","fill","_","max","att","def","attMap","sort","defMap","Elk","highAtt","highDef","o","maxDef","maxAtt","ElkAtt","ElkDef","ElkSurf","opponentScores","AIScore","modif","ElkTimid","AttAndDef","hottest","Limit","ScoreScreen","doLocalTurn","callback","doTurn","Board","boardRef","bind","setSquare","handleScroll","handleTouchStart","handleTouchMove","handleTouchEnd","handleZoom","handleKeyDown","handleKeyUp","createRef","offsetX","offsetY","xLow","xHigh","yLow","yHigh","isTouching","touchStart","touchOffset","shiftScroll","ctrlScroll","newSpaceSize","min","preventDefault","exp","deltaY","deltaX","evt","originalEvent","touch","touches","changedTouches","pageX","pageY","pow","click","key","addEventListener","passive","current","setTimeout","dispatchEvent","CustomEvent","broadcast","gameState2","winner","element","shadow","getComputedStyle","boxShadow","join","postMove","canMove","background","reload","ref","marginTop","marginLeft","values","Game","gs","params","URLSearchParams","search","openGame","get","playerCount","data-name","xmlns","viewBox","points","transform","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.89c72079.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n/**\r\n * The theme components only imports it's theme CSS-file. These components are lazy\r\n * loaded, to enable \"code splitting\" (in order to avoid the themes being bundled together)\r\n */\r\nconst DefaultTheme = React.lazy(() => import('./styles/App'));\r\nconst Win98Theme = React.lazy(() => import('./styles/Win98'));\r\n\r\nconst ThemeSelector = (props: { theme: string; children: any; }) => (\r\n  <>\r\n    {/* Conditionally render theme, based on the current client context */}\r\n    <React.Suspense fallback={() => <div />}>\r\n      {props.theme === 'default' && <DefaultTheme />}\r\n      {props.theme === 'win98' && <Win98Theme />}\r\n    </React.Suspense>\r\n    {/* Render children immediately! */}\r\n    {props.children}\r\n  </>\r\n);\r\n\r\nexport default ThemeSelector;\r\n","import React from \"react\";\r\nimport { GameProps } from \"./GameProps\";\r\nimport { IconConfig } from \"./IconConfig\";\r\n\r\ntype PlayerItemProps = {\r\n\tAIName: string,\r\n\tindex: number,\r\n\ticonConfig: IconConfig,\r\n\tremoveItem: Function,\r\n\tchangeAI: Function,\r\n\tcanDelete: boolean,\r\n\tAIMenuOptions: string[]\r\n};\r\n\r\nfunction PlayerItem(props: PlayerItemProps) {\r\n\tconst { AIName, index, iconConfig, removeItem, changeAI, canDelete, AIMenuOptions } = props;\r\n\treturn (\r\n\t\t<div className=\"menu-playerItem\">\r\n\t\t\t<div className=\"menu-playerItem-icon\">\r\n\t\t\t\t{React.createElement(iconConfig.playerIcons[index], { color: iconConfig.playerColors[index] })}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"menu-playerItem-body\">\r\n\t\t\t\t<div className=\"menu-playerItem-AISelect\">\r\n\t\t\t\t\t<span>Type:</span>\r\n\t\t\t\t\t<select id={`p${index + 1}`} onChange={(e) => changeAI(index, e.target.value)}>\r\n\t\t\t\t\t\t<option selected={AIName === \"player\" ? true : false} value=\"player\">No AI</option>\r\n\t\t\t\t\t\t{AIMenuOptions.map(selectOption => <option selected={AIName === selectOption ? true : false} value={selectOption}>{selectOption}</option>)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{canDelete && <button className=\"menu-playerItem-remove\" onClick={() => removeItem(index)}>X</button>}\r\n\t\t</div>)\r\n}\r\n\r\nexport class Menu extends React.Component<GameProps, GameProps & { tab: string }> {\r\n\tconstructor(props: GameProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t...props,\r\n\t\t\ttab: 'regular'\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { AISelectOptions } = this.props;\r\n\t\tconst { winLength, limit, delay, AINames, iconConfig, tab } = this.state;\r\n\t\tconst removeItem = (index: number) => {\r\n\t\t\tlet newAINames = [...this.state.AINames];\r\n\t\t\tnewAINames.splice(index, 1);\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tAINames: newAINames\r\n\t\t\t})\r\n\t\t};\r\n\t\tconst playGame = () => {\r\n\t\t\tlet url = `win=${winLength}&count=${AINames.length}&delay=${delay}`;\r\n\t\t\tif (tab === \"limit\") {\r\n\t\t\t\turl += `&limit=${limit}`;\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < AINames.length; i++) {\r\n\t\t\t\tif (AINames[i] !== 'player') {\r\n\t\t\t\t\turl += `&p${i + 1}=${AINames[i]}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst baseURL = window.location.href.split('?')[0];\r\n\t\t\twindow.location.assign(`${baseURL}?game=1&${url}`);\r\n\t\t};\r\n\t\tconst changeAI = (index: number, value: string) => {\r\n\t\t\tlet newAINames = [...this.state.AINames];\r\n\t\t\tnewAINames[index] = value;\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tAINames: newAINames\r\n\t\t\t})\r\n\t\t}\r\n\t\tconst canDelete = (AINames.length > 1);\r\n\t\tconst AIMenuOptions = Object.keys(AISelectOptions);\r\n\t\treturn (\r\n\t\t\t<div id=\"menu\">\r\n\t\t\t\t<div id=\"tabs\">\r\n\t\t\t\t\t<button className={`tablinks-${tab === \"regular\" ? \"active\" : \"inactive\"}`} onClick={() => this.setState({ ...this.state, tab: \"regular\" })}>Regular Mode</button>\r\n\t\t\t\t\t<button className={`tablinks-${tab === \"limit\" ? \"active\" : \"inactive\"}`} onClick={() => this.setState({ ...this.state, tab: \"limit\" })}>Limit Mode</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id={`menu-options-${tab === \"regular\" ? \"active\" : \"inactive\"}`}>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id={`menu-options-${tab === \"limit\" ? \"active\" : \"inactive\"}`}>\r\n\t\t\t\t\t<div id=\"menu-limit\">\r\n\t\t\t\t\t\t<span>Maximum Amount of Rounds:</span>\r\n\t\t\t\t\t\t<input id=\"input-limit\" type=\"text\" defaultValue={limit} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\tlimit: parseInt(e.target.value, 10)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"menu-options\">\r\n\t\t\t\t\t<div id=\"menu-winLength\">\r\n\t\t\t\t\t\t<span>Length to Win or (Limit Mode) Gain Score:</span>\r\n\t\t\t\t\t\t<input id=\"input-winLength\" type=\"text\" defaultValue={winLength} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\twinLength: parseInt(e.target.value, 10)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"menu-delay\">\r\n\t\t\t\t\t\t<span>Millisecond Delay Between Moves:</span>\r\n\t\t\t\t\t\t<input id=\"input-delay\" type=\"text\" defaultValue={delay} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\tdelay: parseInt(e.target.value, 10)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"menu-players\">\r\n\t\t\t\t\t{AINames.map((AIName, index) => PlayerItem({\r\n\t\t\t\t\t\tAIName,\r\n\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\ticonConfig,\r\n\t\t\t\t\t\tremoveItem,\r\n\t\t\t\t\t\tchangeAI,\r\n\t\t\t\t\t\tcanDelete,\r\n\t\t\t\t\t\tAIMenuOptions\r\n\t\t\t\t\t}))}\r\n\t\t\t\t</div>\r\n\t\t\t\t{AINames.length < 4 && <button id=\"menu-addPlayer\" onClick={() => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tAINames: [\r\n\t\t\t\t\t\t\t...AINames,\r\n\t\t\t\t\t\t\t\"player\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t}}>Add Player</button>}\r\n\t\t\t\t<button id=\"play-game\" onClick={playGame}>\r\n\t\t\t\t\tPlay!\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import { GameState } from \"./GameState\";\r\n\r\nexport class AI {\r\n\twinLength: number;\r\n\ticon: number;\r\n\tpCount: number;\r\n\tconstructor(\r\n\t\twinLength: number,\r\n\t\ticon: number,\r\n\t\tpCount: number\r\n\t) {\r\n\t\tthis.winLength = winLength;\r\n\t\tthis.icon = icon;\r\n\t\tthis.pCount = pCount;\r\n\t}\r\n\tdoTurn(_gameState: GameState): { x: number, y: number } {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n}","import React from \"react\";\r\nimport { IconConfig } from \"./IconConfig\";\r\n\r\nexport function Space(props: {\r\n\tx: number;\r\n\ty: number;\r\n\tid: string;\r\n\tvalue: number;\r\n\twin: boolean;\r\n\tcanPlayerMove: boolean;\r\n\tonClick: (e: any) => void;\r\n\tview: { spaceSize: number };\r\n\ticonConfig: IconConfig;\r\n}) {\r\n\tconst { x, y, id, value, win, canPlayerMove, onClick, view, iconConfig } = props;\r\n\tconst { spaceSize } = view;\r\n\treturn (<button\r\n\t\tid={id}\r\n\t\tonClick={value === 0 && !win && canPlayerMove ? onClick : () => { }}\r\n\t\tclassName=\"space\"\r\n\t\tstyle={{\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: `${spaceSize}px`,\r\n\t\t\theight: `${spaceSize}px`,\r\n\t\t\tleft: `${x * spaceSize}px`,\r\n\t\t\ttop: `${y * spaceSize}px`\r\n\t\t}}\r\n\t>\r\n\t\t{value > 0 && React.createElement(iconConfig.playerIcons[value - 1], { color: iconConfig.playerColors[value - 1] })}\r\n\t</button>);\r\n}","import { IconConfig } from \"./IconConfig\";\r\nimport { Space } from \"./Space\";\r\n\r\nexport const chunkSize = 3;\r\n\r\nexport function Chunk(props: {\r\n\tchunkX: number;\r\n\tchunkY: number;\r\n\tselectSquare: (e: any) => void;\r\n\tchunkData: number[][];\r\n\tposX: number;\r\n\tposY: number;\r\n\twin: boolean;\r\n\tcanPlayerMove: boolean;\r\n\tview: { spaceSize: number; };\r\n\ticonConfig: IconConfig;\r\n}) {\r\n\tconst {\r\n\t\tchunkData,\r\n\t\tposX,\r\n\t\tposY,\r\n\t\tchunkX,\r\n\t\tchunkY,\r\n\t\twin,\r\n\t\tcanPlayerMove,\r\n\t\tview,\r\n\t\tview: { spaceSize },\r\n\t\tselectSquare,\r\n\t\ticonConfig } = props;\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"chunk\"\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\twidth: `${chunkSize * spaceSize}px`,\r\n\t\t\t\theight: `${chunkSize * spaceSize}px`,\r\n\t\t\t\tleft: `${posX * chunkSize * spaceSize}px`,\r\n\t\t\t\ttop: `${posY * chunkSize * spaceSize}px`\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{chunkData.map((col, x) => {\r\n\t\t\t\treturn col.map((cell, y) =>\r\n\t\t\t\t\t<Space\r\n\t\t\t\t\t\tkey={`${x + chunkX * chunkSize}_${y + chunkY * chunkSize}`}\r\n\t\t\t\t\t\tid={`${x + chunkX * chunkSize}_${y + chunkY * chunkSize}`}\r\n\t\t\t\t\t\tvalue={cell}\r\n\t\t\t\t\t\tx={x}\r\n\t\t\t\t\t\ty={y}\r\n\t\t\t\t\t\tonClick={() => selectSquare({ detail: { x: chunkX * chunkSize + x, y: chunkY * chunkSize + y } })}\r\n\t\t\t\t\t\twin={win}\r\n\t\t\t\t\t\tcanPlayerMove={canPlayerMove}\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\ticonConfig={iconConfig}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}","export function flatten(x: number, d: number): number {\r\n\twhile (x < 0)\r\n\t\tx += d;\r\n\treturn x % d;\r\n}\r\n\r\n/* carter code */\r\nexport function fib(n: number): number {\r\n\tif (n === 1 || n === 0)\r\n\t\treturn n;\r\n\telse\r\n\t\treturn fib(n - 2) + fib(n - 1);\r\n}","import { AI } from \"./AI\";\r\nimport { chunkSize } from \"./Chunk\";\r\nimport { fib, flatten } from \"./utils\";\r\n\r\nexport type GameState = {\r\n\tmap: { [key: string]: { x: number, y: number, chunkData: number[][] } };\r\n\tplacements: { x: number, y: number, v: number }[];\r\n\tmoveLimit: number;\r\n\tisLimited: boolean;\r\n\tturn: number;\r\n\tplayers: (AI | null)[];\r\n};\r\n\r\nfunction horizontalCount(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\tx++;\r\n\t}\r\n\treturn { ps, type: 0 };\r\n}\r\n\r\nfunction verticalCount(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\ty++;\r\n\t}\r\n\treturn { ps, type: 1 };\r\n}\r\n\r\nfunction diagonalUp(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\ty++;\r\n\t\tx++;\r\n\t}\r\n\treturn { ps, type: 2 };\r\n}\r\n\r\nfunction diagonalDown(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\ty--;\r\n\t\tx++;\r\n\t}\r\n\treturn { ps, type: 3 };\r\n}\r\n\r\nexport function getValue(gameState: GameState, x: number, y: number) {\r\n\tconst { map } = gameState;\r\n\tconst chunk = map[Math.floor(x / chunkSize) + '_' + Math.floor(y / chunkSize)];\r\n\tif (chunk === undefined) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn chunk.chunkData[flatten(x, chunkSize)][flatten(y, chunkSize)];\r\n}\r\n\r\nfunction sharePoint(a: { x: number, y: number }[], b: { x: number, y: number }[]) {\r\n\tfor (let i = 0; i < a.length; i++) {\r\n\t\tfor (let j = 0; j < b.length; j++) {\r\n\t\t\tif (a[i].x === b[j].x && a[i].y === b[j].y)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport function getPlayerScores(gameState: GameState, winLength: number) {\r\n\tconst { isLimited } = gameState;\r\n\treturn isLimited ? calculateLimitScore(gameState, winLength) : [];\r\n}\r\n\r\nexport function calculateLimitScore(gameState: GameState, winLength: number) {\r\n\tconst { players, placements } = gameState;\r\n\tlet matches: { type: number, ps: { x: number, y: number }[], old?: boolean }[][] = [];\r\n\tfor (let i = 0; i < players.length; i++) {\r\n\t\tmatches.push([]);\r\n\t}\r\n\tplacements.forEach((placement: { x: number, y: number, v: number }) => {\r\n\t\t[\r\n\t\t\thorizontalCount(gameState, placement.x, placement.y, placement.v),\r\n\t\t\tverticalCount(gameState, placement.x, placement.y, placement.v),\r\n\t\t\tdiagonalUp(gameState, placement.x, placement.y, placement.v),\r\n\t\t\tdiagonalDown(gameState, placement.x, placement.y, placement.v)\r\n\t\t].forEach(e => {\r\n\t\t\tif (e.ps.length < winLength) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet flag = false;\r\n\t\t\tlet removes: number[] = [];\r\n\t\t\tmatches[placement.v - 1].forEach((p: { type: number, ps: { x: number, y: number }[] }, i: number) => {\r\n\t\t\t\tif (p.type === e.type && sharePoint(p.ps, e.ps)) {\r\n\t\t\t\t\tif (p.ps.length < e.ps.length) {\r\n\t\t\t\t\t\tremoves.push(i);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tremoves.forEach(i => matches[placement.v - 1][i].old = true);\r\n\t\t\tif (!flag) {\r\n\t\t\t\tmatches[placement.v - 1].push(e);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tlet playerScores: number[] = [];\r\n\tmatches.map(m => m.filter(e => e.old === undefined));\r\n\tmatches.forEach(e => {\r\n\t\tlet score = 0;\r\n\t\te.forEach(p => {\r\n\t\t\tscore += fib(p.ps.length - winLength + 2);\r\n\t\t});\r\n\t\tplayerScores.push(score);\r\n\t});\r\n\treturn playerScores;\r\n}\r\n\r\nexport function checkWin(gameState: GameState, winLength: number): boolean {\r\n\tif (gameState.placements.length === 0) {\r\n\t\treturn false;\r\n\t}\r\n\tconst { x, y } = gameState.placements[gameState.placements.length - 1];\r\n\tconst { isLimited, moveLimit } = gameState;\r\n\tif (isLimited) {\r\n\t\tif (moveLimit === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t} else {\r\n\t\tconst check = getValue(gameState, x, y);\r\n\t\tif (check === 0)\r\n\t\t\treturn false;\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tlet s = getValue(gameState, x - i + j, y);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push((x - i + j) + \"_\" + y);\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tconst s = getValue(gameState, x, y - i + j);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push(x + \"_\" + (y - i + j));\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tlet s = getValue(gameState, x - i + j, y - i + j);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push((x - i + j) + \"_\" + (y - i + j));\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tlet s = getValue(gameState, x - i + j, y + i - j);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push((x - i + j) + \"_\" + (y + i - j));\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport function addChunk(gameState: GameState, x: number, y: number): GameState {\r\n\tconst { map } = gameState;\r\n\tif (map[x + '_' + y] !== undefined) {\r\n\t\treturn gameState;\r\n\t}\r\n\tlet chunkData: number[][] = [];\r\n\tfor (let i = 0; i < chunkSize; i++) {\r\n\t\tchunkData[i] = [];\r\n\t\tfor (let j = 0; j < chunkSize; j++) {\r\n\t\t\tchunkData[i][j] = 0;\r\n\t\t}\r\n\t}\r\n\treturn gameState = {\r\n\t\t...gameState,\r\n\t\tmap: {\r\n\t\t\t...map,\r\n\t\t\t[`${x}_${y}`]: {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tchunkData\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction generateBorderChunks(gameState: GameState, chunkX: number, chunkY: number): GameState {\r\n\tfor (let i = chunkX - 1; i <= chunkX + 1; i++) {\r\n\t\tfor (let j = chunkY - 1; j <= chunkY + 1; j++) {\r\n\t\t\tgameState = { ...gameState, ...addChunk(gameState, i, j) };\r\n\t\t}\r\n\t}\r\n\treturn gameState;\r\n}\r\n\r\nexport function selectSquare(gameState: GameState, x: number, y: number): GameState {\r\n\tconst { turn, moveLimit, placements, players } = gameState;\r\n\tconst chunkX = Math.floor(x / chunkSize);\r\n\tconst chunkY = Math.floor(y / chunkSize);\r\n\tconst v = turn + 1;\r\n\tconst chunk = gameState.map[chunkX + '_' + chunkY];\r\n\tif (chunk === undefined) {\r\n\t\treturn selectSquare(\r\n\t\t\taddChunk(\r\n\t\t\t\tgameState,\r\n\t\t\t\tchunkX,\r\n\t\t\t\tchunkY),\r\n\t\t\tx,\r\n\t\t\ty);\r\n\t}\r\n\tchunk.chunkData[flatten(x, chunkSize)][flatten(y, chunkSize)] = v;\r\n\tgameState = generateBorderChunks(gameState, chunkX, chunkY);\r\n\treturn gameState = {\r\n\t\t...gameState,\r\n\t\tmap: {\r\n\t\t\t...gameState.map,\r\n\t\t\t[chunkX + '_' + chunkY]: chunk\r\n\t\t},\r\n\t\tplacements: [...placements, { x, y, v }],\r\n\t\tturn: (turn + 1) % players.length,\r\n\t\tmoveLimit: moveLimit - (turn === players.length - 1 ? 1 : 0)\r\n\t};\r\n}","import { GameState } from \"../GameState\";\r\n\r\nexport function countLine(\r\n\tgameState: GameState,\r\n\tx: number, y: number,\r\n\tv: number,\r\n\tdx: number, dy: number,\r\n\tgetValue: (gameState: GameState, x: number, y: number) => number,\r\n\twinLength: number): number {\r\n\tlet i = 1;\r\n\tlet contiguous = 0;\r\n\tlet space = 0;\r\n\twhile (getValue(gameState, x + i * dx, y + i * dy) === v) {\r\n\t\tcontiguous++;\r\n\t\ti++;\r\n\t}\r\n\twhile (getValue(gameState, x + i * dx, y + i * dy) === 0 && i < winLength) {\r\n\t\tspace++;\r\n\t\ti++;\r\n\t}\r\n\ti = -1;\r\n\twhile (getValue(gameState, x + i * dx, y + i * dy) === v) {\r\n\t\tcontiguous++;\r\n\t\ti--;\r\n\t}\r\n\twhile (getValue(gameState, x + i * dx, y + i * dy) === v && -i < winLength) {\r\n\t\tspace++;\r\n\t\ti--;\r\n\t}\r\n\tif (space + contiguous + 1 < winLength) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn contiguous;\r\n}\r\n\r\n// I don't remember how this works\r\nexport function countLineOld(gameState: GameState, x: number, y: number, v: number, dx: number, dy: number, getValue: (gameState: GameState, x: number, y: number) => number, winLength: number): number {\r\n\tlet l = 0;\r\n\tlet i = -1;\r\n\twhile (getValue(gameState, x + i * dx, y + i * dy) === v) {\r\n\t\tlet d = 0;\r\n\t\tlet nx = x + i * dx;\r\n\t\tlet ny = y + i * dy;\r\n\t\twhile (getValue(gameState, nx, ny) === v || (nx === x && ny === y)) {\r\n\t\t\td++;\r\n\t\t\tnx += dx;\r\n\t\t\tny += dy;\r\n\t\t}\r\n\t\tif (d < winLength) {\r\n\t\t\tfor (let j = d; j <= winLength; j++) {\r\n\t\t\t\tlet nx2 = x + (i + j) * dx;\r\n\t\t\t\tlet ny2 = y + (i + j) * dy;\r\n\t\t\t\tif (getValue(gameState, nx2, ny2) !== v && getValue(gameState, nx2, ny2) !== 0) {\r\n\t\t\t\t\td = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d > l) {\r\n\t\t\tl = d;\r\n\t\t}\r\n\t\ti--;\r\n\t}\r\n\treturn l;\r\n}\r\n\r\nexport function getRandomElement(array: any[]) {\r\n\treturn array[Math.floor(Math.random() * array.length)];\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLineOld, getRandomElement } from \"./utils\";\r\n\r\nexport class Fuzzy extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) => Math.max(\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\tcountLineOld(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength)));\r\n\t\t\t\t\theatMap.push({\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet attMap = [...heatMap].sort((a, b) => a.att === b.att ? b.def - a.def : b.att - a.att);\r\n\t\t\tlet defMap = [...heatMap].sort((a, b) => a.def === b.def ? b.att - a.att : b.def - a.def);\r\n\t\t\tattMap = attMap.filter(({ att, def }) => att === attMap[0].att && def === attMap[0].def);\r\n\t\t\tdefMap = defMap.filter(({ att, def }) => att === defMap[0].att && def === defMap[0].def);\r\n\t\t\tif (attMap[0].att > this.winLength - 1) {\r\n\t\t\t\treturn getRandomElement(attMap);\r\n\t\t\t}\r\n\t\t\tif (defMap[0].def > this.winLength - 1) {\r\n\t\t\t\treturn getRandomElement(defMap);\r\n\t\t\t}\r\n\t\t\treturn attMap[0].att >= defMap[0].def ? getRandomElement(attMap) : getRandomElement(defMap);\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine, getRandomElement } from \"./utils\";\r\n\r\nexport class Elk extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) =>\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength));\r\n\t\t\t\t\tconst o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\treturn (highAtt - highDef) > 0 ? getRandomElement(attMap) : getRandomElement(defMap);\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine, getRandomElement } from \"./utils\";\r\n\r\nexport class ElkAtt extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) =>\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength));\r\n\t\t\t\t\tconst o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\treturn (highAtt - highDef) > -1 ? getRandomElement(attMap) : getRandomElement(defMap);\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine, getRandomElement } from \"./utils\";\r\n\r\nexport class ElkDef extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) =>\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength));\r\n\t\t\t\t\tconst o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\treturn (highAtt - highDef) > 1 ? getRandomElement(attMap) : getRandomElement(defMap);\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getPlayerScores, getValue } from \"../GameState\";\r\nimport { countLine, getRandomElement } from \"./utils\";\r\n\r\n// Becomes ElkAtt when winning, ElkDef when losing\r\n\r\nexport class ElkSurf extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements, players } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) =>\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength));\r\n\t\t\t\t\tconst o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\tlet opponentScores = 0;\r\n\t\t\tlet AIScore = 0;\r\n\t\t\tconst playerScores = getPlayerScores(gameState, this.winLength);\r\n\t\t\tplayerScores.forEach((score, index) => {\r\n\t\t\t\tif (players[index] === this) {\r\n\t\t\t\t\tAIScore = score;\r\n\t\t\t\t} else {\r\n\t\t\t\t\topponentScores += score;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst modif = (opponentScores / (this.pCount - 1)) < AIScore ? -1 : 1;\r\n\t\t\treturn (highAtt - highDef) > modif ? getRandomElement(attMap) : getRandomElement(defMap);\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getPlayerScores, getValue } from \"../GameState\";\r\nimport { countLine, getRandomElement } from \"./utils\";\r\n\r\n// Becomes ElkDef when winning, ElkAtt when losing\r\n\r\nexport class ElkTimid extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements, players } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) =>\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength));\r\n\t\t\t\t\tconst o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\tlet opponentScores = 0;\r\n\t\t\tlet AIScore = 0;\r\n\t\t\tconst playerScores = getPlayerScores(gameState, this.winLength);\r\n\t\t\tplayerScores.forEach((score, index) => {\r\n\t\t\t\tif (players[index] === this) {\r\n\t\t\t\t\tAIScore = score;\r\n\t\t\t\t} else {\r\n\t\t\t\t\topponentScores += score;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst modif = (opponentScores / (this.pCount - 1)) < AIScore ? 1 : -1;\r\n\t\t\treturn (highAtt - highDef) > modif ? getRandomElement(attMap) : getRandomElement(defMap);\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine, getRandomElement } from \"./utils\";\r\n\r\nexport class AttAndDef extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tlet hottest = 0;\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (heatMap.find(h => h.x === e.x + x && h.y === e.y + y)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mappings = Array(this.pCount).fill(0).map((_, i) =>\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength) +\r\n\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength));\r\n\t\t\t\t\tconst o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: mappings[this.icon - 1],\r\n\t\t\t\t\t\tdef: Math.max(...mappings.filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att + o.def > hottest) {\r\n\t\t\t\t\t\thottest = o.att + o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet bestMap = heatMap.filter(e => e.att + e.def === hottest);\r\n\t\t\treturn getRandomElement(bestMap);\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport { AI } from './AI';\r\nimport { Chunk, chunkSize } from './Chunk';\r\nimport { calculateLimitScore, checkWin, GameState, getPlayerScores, getValue, selectSquare } from './GameState';\r\nimport { IconConfig } from './IconConfig';\r\nimport { flatten } from './utils';\r\n\r\ntype BoardProps = {\r\n\tgameState: GameState;\r\n\ticonConfig: IconConfig;\r\n\tbroadcast: (gameState: GameState, callback: (gameState: GameState) => void) => void;\r\n\tcanMove: boolean;\r\n\tdelay: number;\r\n\twinLength: number;\r\n};\r\n\r\ntype BoardState = {\r\n\tview: {\r\n\t\toffsetX: number;\r\n\t\toffsetY: number;\r\n\t\tspaceSize: number;\r\n\t};\r\n\txLow: number;\r\n\txHigh: number;\r\n\tyLow: number;\r\n\tyHigh: number;\r\n\tisTouching: boolean;\r\n\ttouchStart: { x: number, y: number };\r\n\ttouchOffset: { x: number, y: number };\r\n\tshiftScroll: boolean;\r\n\tctrlScroll: boolean;\r\n};\r\n\r\nconst Limit = (props: { moveLimit: number }) => {\r\n\treturn (<div id=\"limit-dialog\">Turns Left: {props.moveLimit}</div>);\r\n}\r\n\r\nconst ScoreScreen = (props: { playerScores: number[], iconConfig: IconConfig }) => {\r\n\tconst { playerScores, iconConfig } = props;\r\n\treturn (\r\n\t\t<div id=\"score-dialog\">\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{playerScores.map((score, i) => <tr key={i}><td style={{ width: \"40px\" }}>{React.createElement(iconConfig.playerIcons[i], { color: iconConfig.playerColors[i] })}</td><td>{score}</td></tr>)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction doLocalTurn(gameState: GameState, callback: (x: number, y: number) => void) {\r\n\tif (gameState.players[gameState.turn] !== null) {\r\n\t\tconst { x, y } = (gameState.players[gameState.turn] as AI).doTurn(gameState);\r\n\t\tcallback(x, y);\r\n\t}\r\n}\r\n\r\nfunction postMove(\r\n\tgameState: GameState,\r\n\ticonConfig: IconConfig,\r\n\twinLength: number,\r\n\tsetSquare: (x: number, y: number) => void) {\r\n\tconst { isLimited, players, placements, turn } = gameState;\r\n\tif (checkWin(gameState, winLength)) {\r\n\t\tconst winner =\r\n\t\t\tflatten(\r\n\t\t\t\t(isLimited ?\r\n\t\t\t\t\tcalculateLimitScore(gameState, winLength).map((e, i) => ({ e, i })).sort((a, b) => b.e - a.e)[0].i\r\n\t\t\t\t\t: turn - 1),\r\n\t\t\t\tplayers.length\r\n\t\t\t);\r\n\t\tplacements.forEach(placement => {\r\n\t\t\tlet element = document.getElementById(placement.x + \"_\" + placement.y) as HTMLElement;\r\n\t\t\telement.classList.add(\"amoeba-square\");\r\n\t\t\tlet shadow = [];\r\n\t\t\tif (window.getComputedStyle(element).boxShadow !== \"none\") {\r\n\t\t\t\tshadow.push(window.getComputedStyle(element).boxShadow);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x, placement.y + 1) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 0rem 5rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x + 1, placement.y) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x, placement.y + 1) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x + 1, placement.y + 1) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 5rem 5rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x + 1, placement.y) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 5rem 0rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x + 1, placement.y) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x, placement.y - 1) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x + 1, placement.y - 1) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 5rem -5rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x, placement.y - 1) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 0rem -5rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x - 1, placement.y) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x, placement.y + 1) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x - 1, placement.y + 1) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} -5rem 5rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x - 1, placement.y) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} -5rem 0rem`);\r\n\t\t\t}\r\n\t\t\tif (getValue(gameState, placement.x - 1, placement.y) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x, placement.y - 1) === 0\r\n\t\t\t\t&& getValue(gameState, placement.x - 1, placement.y - 1) === 0) {\r\n\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} -5rem -5rem`);\r\n\t\t\t}\r\n\t\t\telement.style.boxShadow = shadow.join(\", \");\r\n\t\t});\r\n\t} else {\r\n\t\tdoLocalTurn(gameState, setSquare);\r\n\t}\r\n}\r\n\r\nexport class Board extends React.Component<BoardProps, BoardState> {\r\n\tboardRef: React.RefObject<HTMLDivElement>;\r\n\tconstructor(props: BoardProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.selectSquare = this.selectSquare.bind(this);\r\n\t\tthis.setSquare = this.setSquare.bind(this);\r\n\t\tthis.handleScroll = this.handleScroll.bind(this);\r\n\t\tthis.handleTouchStart = this.handleTouchStart.bind(this);\r\n\t\tthis.handleTouchMove = this.handleTouchMove.bind(this);\r\n\t\tthis.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n\t\tthis.handleZoom = this.handleZoom.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleKeyUp = this.handleKeyUp.bind(this);\r\n\r\n\t\tthis.boardRef = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tview: {\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\tspaceSize: 50\r\n\t\t\t},\r\n\t\t\txLow: 0,\r\n\t\t\txHigh: 0,\r\n\t\t\tyLow: 0,\r\n\t\t\tyHigh: 0,\r\n\t\t\tisTouching: false,\r\n\t\t\ttouchStart: { x: 0, y: 0 },\r\n\t\t\ttouchOffset: { x: 0, y: 0 },\r\n\t\t\tshiftScroll: false,\r\n\t\t\tctrlScroll: false\r\n\t\t}\r\n\t}\r\n\thandleZoom(v: number) {\r\n\t\tconst { offsetX, offsetY, spaceSize } = this.state.view;\r\n\t\tconst newSpaceSize = Math.max(15, Math.min(160, spaceSize * v));\r\n\t\tthis.setState({\r\n\t\t\tview: {\r\n\t\t\t\toffsetX: offsetX * (newSpaceSize / spaceSize),\r\n\t\t\t\toffsetY: offsetY * (newSpaceSize / spaceSize),\r\n\t\t\t\tspaceSize: newSpaceSize\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleScroll(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst { shiftScroll, ctrlScroll } = this.state;\r\n\t\tconst { offsetX, offsetY, spaceSize } = this.state.view;\r\n\t\tif (ctrlScroll) {\r\n\t\t\tthis.handleZoom(Math.exp(e.deltaY / 200));\r\n\t\t} else {\r\n\t\t\tconst deltaX = e.deltaX * 0.25;\r\n\t\t\tconst deltaY = e.deltaY * 0.25;\r\n\t\t\tthis.setState({\r\n\t\t\t\tview: {\r\n\t\t\t\t\toffsetX: offsetX - (shiftScroll ? deltaY : deltaX),\r\n\t\t\t\t\toffsetY: offsetY - (shiftScroll ? deltaX : deltaY),\r\n\t\t\t\t\tspaceSize: spaceSize\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleTouchMove(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n\t\tconst touch = evt.touches[0] || evt.changedTouches[0];\r\n\t\tthis.setState({\r\n\t\t\ttouchOffset: { x: touch.pageX, y: touch.pageY }\r\n\t\t});\r\n\t}\r\n\thandleTouchStart(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n\t\tconst touch = evt.touches[0] || evt.changedTouches[0];\r\n\t\tthis.setState({\r\n\t\t\tisTouching: true,\r\n\t\t\ttouchStart: { x: touch.pageX, y: touch.pageY },\r\n\t\t\ttouchOffset: { x: touch.pageX, y: touch.pageY }\r\n\t\t});\r\n\t}\r\n\thandleTouchEnd(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n\t\tconst touch = evt.touches[0] || evt.changedTouches[0];\r\n\t\tconst { view, touchStart, touchOffset } = this.state;\r\n\t\tconst { offsetX, offsetY, spaceSize } = view;\r\n\t\tthis.setState({\r\n\t\t\tisTouching: false,\r\n\t\t\tview: {\r\n\t\t\t\toffsetX: offsetX + (touchOffset.x - touchStart.x),\r\n\t\t\t\toffsetY: offsetY + (touchOffset.y - touchStart.y),\r\n\t\t\t\tspaceSize: spaceSize\r\n\t\t\t}\r\n\t\t}, () => {\r\n\t\t\tif (Math.pow(touchStart.x - touch.pageX, 2) + Math.pow(touchStart.y - touch.pageY, 2) < 10) {\r\n\t\t\t\tif (touch.target.click !== undefined) {\r\n\t\t\t\t\ttouch.target.click();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleKeyDown(e: any) {\r\n\t\tswitch (e.key) {\r\n\t\t\tcase 'Shift':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshiftScroll: true\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Control':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tctrlScroll: true\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\thandleKeyUp(e: any) {\r\n\t\tswitch (e.key) {\r\n\t\t\tcase 'Shift':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshiftScroll: false\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Control':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tctrlScroll: false\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconst { gameState } = this.props;\r\n\t\twindow.addEventListener('wheel', this.handleScroll, { passive: false });\r\n\t\twindow.addEventListener('touchstart', this.handleTouchStart, { passive: false });\r\n\t\twindow.addEventListener('touchmove', this.handleTouchMove, { passive: false });\r\n\t\twindow.addEventListener('touchend', this.handleTouchEnd, { passive: false });\r\n\t\twindow.addEventListener('touchcancel', this.handleTouchEnd, { passive: false });\r\n\t\twindow.addEventListener('keydown', this.handleKeyDown, { passive: false });\r\n\t\twindow.addEventListener('keyup', this.handleKeyUp, { passive: false });\r\n\t\tthis.boardRef.current?.addEventListener('selectSquare', this.selectSquare);\r\n\t\tdoLocalTurn(gameState, this.setSquare);\r\n\t}\r\n\tsetSquare(x: number, y: number) {\r\n\t\tconst { delay } = this.props;\r\n\t\tsetTimeout(\r\n\t\t\t() => this.boardRef.current?.dispatchEvent(\r\n\t\t\t\tnew CustomEvent('selectSquare',\r\n\t\t\t\t\t{ detail: { x: x, y: y } })),\r\n\t\t\tdelay);\r\n\t}\r\n\tselectSquare(e: any) {\r\n\t\tconst { broadcast, gameState, iconConfig, winLength } = this.props;\r\n\t\tconst { x, y } = e.detail;\r\n\t\tdocument.getElementById(x + \"_\" + y)?.classList.add(\"space-pressed\");\r\n\t\tbroadcast(\r\n\t\t\tselectSquare(gameState, x, y),\r\n\t\t\t(gameState2: GameState) =>\r\n\t\t\t\tpostMove(gameState2, iconConfig, winLength, this.setSquare));\r\n\t}\r\n\trender() {\r\n\t\tconst { iconConfig, canMove, winLength, gameState,\r\n\t\t\tgameState: { moveLimit, turn, map, isLimited, players } } = this.props;\r\n\t\tconst { view,\r\n\t\t\tview: { offsetX, offsetY, spaceSize },\r\n\t\t\tisTouching, touchOffset, touchStart,\r\n\t\t\txLow, yLow, xHigh, yHigh\r\n\t\t} = this.state;\r\n\t\tconst width = spaceSize * chunkSize * (xHigh - xLow + 1);\r\n\t\tconst height = spaceSize * chunkSize * (yHigh - yLow + 1);\r\n\t\tconst playerScores = getPlayerScores(gameState, winLength);\r\n\t\tconst win = checkWin(gameState, winLength);\r\n\t\treturn (\r\n\t\t\t<div id=\"screen\">\r\n\t\t\t\t<div id=\"player-bar\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground: (win ?\r\n\t\t\t\t\t\t\ticonConfig.playerColors[flatten((isLimited ?\r\n\t\t\t\t\t\t\t\tplayerScores.map((e, i) => ({ e, i })).sort((a, b) => b.e - a.e)[0].i\r\n\t\t\t\t\t\t\t\t: turn - 1), players.length)]\r\n\t\t\t\t\t\t\t: iconConfig.playerColors[turn])\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"zoom-bar\">\r\n\t\t\t\t\t<button id=\"zoom-in\" onClick={() => this.handleZoom(3 / 2)}>+</button>\r\n\t\t\t\t\t<button id=\"zoom-out\" onClick={() => this.handleZoom(2 / 3)}>-</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{isLimited && <Limit moveLimit={moveLimit} />}\r\n\t\t\t\t{isLimited && <ScoreScreen playerScores={playerScores} iconConfig={iconConfig} />}\r\n\t\t\t\t<button id=\"reset-button\" onClick={() => window.location.reload()}>Reset Game</button>\r\n\t\t\t\t<div className=\"board\" ref={this.boardRef}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"chunk-container\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\twidth: `${width}px`,\r\n\t\t\t\t\t\t\theight: `${height}px`,\r\n\t\t\t\t\t\t\tmarginTop: `${-height / 2 + offsetY + (isTouching ? (touchOffset.y - touchStart.y) : 0)}px`,\r\n\t\t\t\t\t\t\tmarginLeft: `${-width / 2 + offsetX + (isTouching ? (touchOffset.x - touchStart.x) : 0)}px`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Object.values(map).map(value =>\r\n\t\t\t\t\t\t\t<Chunk\r\n\t\t\t\t\t\t\t\ticonConfig={iconConfig}\r\n\t\t\t\t\t\t\t\tkey={value.x + '_' + value.y}\r\n\t\t\t\t\t\t\t\tposX={value.x - xLow}\r\n\t\t\t\t\t\t\t\tposY={value.y - yLow}\r\n\t\t\t\t\t\t\t\tchunkX={value.x}\r\n\t\t\t\t\t\t\t\tchunkY={value.y}\r\n\t\t\t\t\t\t\t\tchunkData={value.chunkData}\r\n\t\t\t\t\t\t\t\tselectSquare={this.selectSquare}\r\n\t\t\t\t\t\t\t\twin={win}\r\n\t\t\t\t\t\t\t\tcanPlayerMove={canMove}\r\n\t\t\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport reportWebVitals from './reportWebVitals';\nimport ThemeSelector from './ThemeSelector';\nimport { CircleIcon } from './assets/CircleIcon';\nimport { CrossIcon } from './assets/CrossIcon';\nimport { DiamondIcon } from './assets/DiamondIcon';\nimport { SquareIcon } from './assets/SquareIcon';\nimport { Menu } from './Menu';\nimport { Fuzzy } from './ais/Fuzzy';\nimport { Elk } from './ais/Elk';\nimport { ElkAtt } from './ais/ElkAtt';\nimport { ElkDef } from './ais/ElkDef';\nimport { ElkSurf } from './ais/ElkSurf';\nimport { ElkTimid } from './ais/ElkTimid';\nimport { AttAndDef } from './ais/AttAndDef';\nimport { Game } from './Game';\n\nconst AISelectOptions: { [key: string]: any } = {\n\t\"fuzzy\": Fuzzy,\n\t\"elk\": Elk,\n\t\"elkatt\": ElkAtt,\n\t\"elkdef\": ElkDef,\n\t\"elksurf\": ElkSurf,\n\t\"elktimid\": ElkTimid,\n\t\"attanddef\": AttAndDef\n};\n\nconst params = new URLSearchParams(window.location.search);\n\nconst openGame = params.get('game');\n\nconst winLength = params.get('win') ? parseInt(params.get('win') as string, 10) : 5;\nconst playerCount = params.get('count') ? parseInt(params.get('count') as string, 10) : 2;\nconst limit = params.get('limit') ? parseInt(params.get('limit') as string, 10) : 0;\nconst delay = params.get('delay') ? parseInt(params.get('delay') as string, 10) : 0;\nlet AINames = []\nfor (let i = 0; i < playerCount; i++) {\n\tAINames.push(params.get(`p${i + 1}`) || 'player');\n}\n\nconst iconConfig = {\n\tplayerColors: [\n\t\t'#5588ff',\n\t\t'#ff3344',\n\t\t\"#33ff44\",\n\t\t'#ffcc33'\n\t],\n\tplayerIcons: [\n\t\tCircleIcon,\n\t\tCrossIcon,\n\t\tDiamondIcon,\n\t\tSquareIcon\n\t]\n};\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeSelector theme={params.get('theme') || 'default'}>\n\t\t\t{openGame ? <Game\n\t\t\t\twinLength={winLength}\n\t\t\t\tlimit={limit}\n\t\t\t\tdelay={delay}\n\t\t\t\tAINames={AINames}\n\t\t\t\ticonConfig={iconConfig}\n\t\t\t\tAISelectOptions={AISelectOptions}\n\t\t\t/> : <Menu\n\t\t\t\twinLength={winLength}\n\t\t\t\tlimit={limit}\n\t\t\t\tdelay={delay}\n\t\t\t\tAINames={AINames}\n\t\t\t\ticonConfig={iconConfig}\n\t\t\t\tAISelectOptions={AISelectOptions}\n\t\t\t/>}\n\t\t</ThemeSelector>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Board } from './Board';\nimport { addChunk, GameState } from './GameState';\nimport { AI } from './AI';\nimport React from 'react';\nimport { GameProps } from './GameProps';\n\nexport class Game extends React.Component<GameProps, GameState> {\n\tconstructor(props: GameProps) {\n\t\tsuper(props);\n\n\t\tconst { winLength, limit, AINames, AISelectOptions } = props;\n\n\t\tconst players: (AI | null)[] = AINames\n\t\t\t.map((AIName, i) => AIName === \"player\"\n\t\t\t\t? null\n\t\t\t\t: new AISelectOptions[AIName](winLength, i + 1, AINames.length));\n\n\t\tthis.state = {\n\t\t\tturn: 0,\n\t\t\tplacements: [],\n\t\t\tmap: {},\n\t\t\tmoveLimit: (limit > 0 ? limit : 0),\n\t\t\tisLimited: limit > 0,\n\t\t\tplayers\n\t\t};\n\n\t\tfor (let i = -1; i <= 1; i++) {\n\t\t\tfor (let j = -1; j <= 1; j++) {\n\t\t\t\tthis.state = { ...this.state, ...addChunk(this.state, i, j) };\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { iconConfig, delay, winLength } = this.props;\n\t\tconst { players } = this.state;\n\n\t\treturn (<Board\n\t\t\ticonConfig={iconConfig}\n\t\t\tgameState={this.state}\n\t\t\tbroadcast={(gs: GameState, callback: (gs: GameState) => void) => {\n\t\t\t\tthis.setState(gs);\n\t\t\t\tcallback(gs);\n\t\t\t}}\n\t\t\tcanMove={players[this.state.turn] === null}\n\t\t\tdelay={delay}\n\t\t\twinLength={winLength}\n\t\t/>);\n\t}\n}\n","export const CircleIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<path fill={props.color} d=\"M500,0C223.86,0,0,223.86,0,500s223.86,500,500,500,500-223.86,500-500S776.14,0,500,0Zm0,800c-165.69,0-300-134.31-300-300S334.31,200,500,200,800,334.31,800,500,665.69,800,500,800Z\" />\r\n\t\t</svg>\r\n\t);\r\n}","export const CrossIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<polygon fill={props.color} points=\"1000 858.58 641.42 500 1000 141.42 858.58 0 500 358.58 141.42 0 0 141.42 358.58 500 0 858.58 141.42 1000 500 641.42 858.58 1000 1000 858.58\" />\r\n\t\t</svg>\r\n\t);\r\n}","export const DiamondIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<path fill={props.color} d=\"M500,0,0,500l500,500,500-500Zm0,717.16L282.84,500,500,282.84,717.16,500Z\" transform=\"translate(0 0)\" />\r\n\t\t</svg>\r\n\t);\r\n}","export const SquareIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<path fill={props.color} d=\"M0,0V1000H1000V0ZM800,800H200V200H800Z\" />\r\n\t\t</svg>\r\n\t);\r\n}"],"sourceRoot":""}