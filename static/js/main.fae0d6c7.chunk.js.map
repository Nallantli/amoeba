{"version":3,"sources":["reportWebVitals.ts","ThemeSelector.tsx","Menu.tsx","Space.tsx","Chunk.tsx","utils.tsx","GameState.tsx","Board.tsx","App.tsx","AI.tsx","ais/utils.tsx","index.tsx","ais/Fuzzy.tsx","ais/Elk.tsx","ais/ElkAtt.tsx","ais/ElkDef.tsx","ais/ElkSurf.tsx","ais/ElkTimid.tsx","assets/CircleIcon.tsx","assets/CrossIcon.tsx","assets/DiamondIcon.tsx","assets/SquareIcon.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultTheme","React","lazy","Win98Theme","ThemeSelector","props","Suspense","fallback","theme","children","Menu","state","tab","AISelectOptions","this","winLength","limit","delay","AINames","iconConfig","removeItem","index","newAINames","splice","setState","changeAI","value","canDelete","length","AIMenuOptions","Object","keys","id","className","onClick","type","defaultValue","onChange","e","parseInt","target","map","AIName","createElement","playerIcons","color","playerColors","selected","selectOption","PlayerItem","url","i","baseURL","window","location","href","split","assign","Component","Space","x","y","win","canPlayerMove","view","spaceSize","style","position","width","height","left","top","Chunk","chunkData","posX","posY","chunkX","chunkY","selectSquare","col","cell","detail","flatten","d","fib","n","horizontalCount","gameState","v","ps","getValue","push","verticalCount","diagonalUp","diagonalDown","chunk","Math","floor","undefined","calculateLimitScore","playerCount","placements","matches","forEach","placement","flag","removes","p","a","b","j","sharePoint","old","playerScores","m","filter","score","checkWin","isLimited","moveLimit","check","squares","s","document","getElementById","classList","add","addChunk","turn","generateBorderChunks","Limit","ScoreScreen","Board","boardRef","bind","postMove","handleScroll","handleTouchStart","handleTouchMove","handleTouchEnd","handleZoom","handleKeyDown","handleKeyUp","getPlayerScores","createRef","offsetX","offsetY","xLow","xHigh","yLow","yHigh","isTouching","touchStart","touchOffset","shiftScroll","ctrlScroll","newSpaceSize","max","min","preventDefault","exp","deltaY","deltaX","evt","originalEvent","touch","touches","changedTouches","pageX","pageY","pow","click","key","addEventListener","passive","current","doLocalTurn","winner","sort","element","shadow","getComputedStyle","boxShadow","join","broadcast","canMove","background","reload","ref","marginTop","marginLeft","values","turnDelay","AIs","doTurn","setTimeout","dispatchEvent","CustomEvent","App","gs","callback","AI","icon","pCount","_gameState","_playerScores","Error","countLine","dx","dy","l","nx","ny","nx2","ny2","highAtt","highDef","heatMap","h","o","att","def","Array","fill","_","maxDef","maxAtt","attMap","defMap","random","opponentScores","AIScore","modif","params","URLSearchParams","search","openGame","get","data-name","xmlns","viewBox","points","transform","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fae0d6c7.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n/**\r\n * The theme components only imports it's theme CSS-file. These components are lazy\r\n * loaded, to enable \"code splitting\" (in order to avoid the themes being bundled together)\r\n */\r\nconst DefaultTheme = React.lazy(() => import('./styles/App'));\r\nconst Win98Theme = React.lazy(() => import('./styles/Win98'));\r\n\r\nconst ThemeSelector = (props: { theme: string; children: any; }) => (\r\n  <>\r\n    {/* Conditionally render theme, based on the current client context */}\r\n    <React.Suspense fallback={() => <div />}>\r\n      {props.theme === 'default' && <DefaultTheme />}\r\n      {props.theme === 'win98' && <Win98Theme />}\r\n    </React.Suspense>\r\n    {/* Render children immediately! */}\r\n    {props.children}\r\n  </>\r\n);\r\n\r\nexport default ThemeSelector;\r\n","import React from \"react\";\r\nimport { GameProps } from \"./GameProps\";\r\nimport { IconConfig } from \"./IconConfig\";\r\n\r\ntype PlayerItemProps = {\r\n\tAIName: string,\r\n\tindex: number,\r\n\ticonConfig: IconConfig,\r\n\tremoveItem: Function,\r\n\tchangeAI: Function,\r\n\tcanDelete: boolean,\r\n\tAIMenuOptions: string[]\r\n};\r\n\r\nfunction PlayerItem(props: PlayerItemProps) {\r\n\tconst { AIName, index, iconConfig, removeItem, changeAI, canDelete, AIMenuOptions } = props;\r\n\treturn (\r\n\t\t<div className=\"menu-playerItem\">\r\n\t\t\t<div className=\"menu-playerItem-icon\">\r\n\t\t\t\t{React.createElement(iconConfig.playerIcons[index], { color: iconConfig.playerColors[index] })}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"menu-playerItem-body\">\r\n\t\t\t\t<div className=\"menu-playerItem-AISelect\">\r\n\t\t\t\t\t<span>Type:</span>\r\n\t\t\t\t\t<select id={`p${index + 1}`} onChange={(e) => changeAI(index, e.target.value)}>\r\n\t\t\t\t\t\t<option selected={AIName === \"player\" ? true : false} value=\"player\">No AI</option>\r\n\t\t\t\t\t\t{AIMenuOptions.map(selectOption => <option selected={AIName === selectOption ? true : false} value={selectOption}>{selectOption}</option>)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{canDelete && <button className=\"menu-playerItem-remove\" onClick={() => removeItem(index)}>X</button>}\r\n\t\t</div>)\r\n}\r\n\r\ninterface MenuState extends GameProps {\r\n\ttab: string;\r\n};\r\n\r\ninterface MenuProps extends GameProps {\r\n};\r\n\r\nexport class Menu extends React.Component<MenuProps, MenuState> {\r\n\tconstructor(props: MenuProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t...props,\r\n\t\t\ttab: 'regular'\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { AISelectOptions } = this.props;\r\n\t\tconst { winLength, limit, delay, AINames, iconConfig, tab } = this.state;\r\n\t\tconst removeItem = (index: number) => {\r\n\t\t\tlet newAINames = [...this.state.AINames];\r\n\t\t\tnewAINames.splice(index, 1);\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tAINames: newAINames\r\n\t\t\t})\r\n\t\t};\r\n\t\tconst playGame = () => {\r\n\t\t\tlet url = `win=${winLength}&count=${AINames.length}&delay=${delay}`;\r\n\t\t\tif (tab === \"limit\") {\r\n\t\t\t\turl += `&limit=${limit}`;\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < AINames.length; i++) {\r\n\t\t\t\tif (AINames[i] !== 'player') {\r\n\t\t\t\t\turl += `&p${i + 1}=${AINames[i]}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst baseURL = window.location.href.split('?')[0];\r\n\t\t\twindow.location.assign(`${baseURL}?game=1&${url}`);\r\n\t\t};\r\n\t\tconst changeAI = (index: number, value: string) => {\r\n\t\t\tlet newAINames = [...this.state.AINames];\r\n\t\t\tnewAINames[index] = value;\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tAINames: newAINames\r\n\t\t\t})\r\n\t\t}\r\n\t\tconst canDelete = (AINames.length > 1);\r\n\t\tconst AIMenuOptions = Object.keys(AISelectOptions);\r\n\t\treturn (\r\n\t\t\t<div id=\"menu\">\r\n\t\t\t\t<div id=\"tabs\">\r\n\t\t\t\t\t<button className={`tablinks-${tab === \"regular\" ? \"active\" : \"inactive\"}`} onClick={() => this.setState({ ...this.state, tab: \"regular\" })}>Regular Mode</button>\r\n\t\t\t\t\t<button className={`tablinks-${tab === \"limit\" ? \"active\" : \"inactive\"}`} onClick={() => this.setState({ ...this.state, tab: \"limit\" })}>Limit Mode</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id={`menu-options-${tab === \"regular\" ? \"active\" : \"inactive\"}`}>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id={`menu-options-${tab === \"limit\" ? \"active\" : \"inactive\"}`}>\r\n\t\t\t\t\t<div id=\"menu-limit\">\r\n\t\t\t\t\t\t<span>Maximum Amount of Rounds:</span>\r\n\t\t\t\t\t\t<input id=\"input-limit\" type=\"text\" defaultValue={limit} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\tlimit: parseInt(e.target.value, 10)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"menu-options\">\r\n\t\t\t\t\t<div id=\"menu-winLength\">\r\n\t\t\t\t\t\t<span>Length to Win or (Limit Mode) Gain Score:</span>\r\n\t\t\t\t\t\t<input id=\"input-winLength\" type=\"text\" defaultValue={winLength} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\twinLength: parseInt(e.target.value, 10)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"menu-delay\">\r\n\t\t\t\t\t\t<span>Millisecond Delay Between Moves:</span>\r\n\t\t\t\t\t\t<input id=\"input-delay\" type=\"text\" defaultValue={delay} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\tdelay: parseInt(e.target.value, 10)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"menu-players\">\r\n\t\t\t\t\t{AINames.map((AIName, index) => PlayerItem({\r\n\t\t\t\t\t\tAIName,\r\n\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\ticonConfig,\r\n\t\t\t\t\t\tremoveItem,\r\n\t\t\t\t\t\tchangeAI,\r\n\t\t\t\t\t\tcanDelete,\r\n\t\t\t\t\t\tAIMenuOptions\r\n\t\t\t\t\t}))}\r\n\t\t\t\t</div>\r\n\t\t\t\t{AINames.length < 4 && <button id=\"menu-addPlayer\" onClick={() => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tAINames: [\r\n\t\t\t\t\t\t\t...AINames,\r\n\t\t\t\t\t\t\t\"player\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t}}>Add Player</button>}\r\n\t\t\t\t<button id=\"play-game\" onClick={playGame}>\r\n\t\t\t\t\tPlay!\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from \"react\";\r\nimport { IconConfig } from \"./IconConfig\";\r\n\r\ntype SpaceProps = {\r\n\tx: number;\r\n\ty: number;\r\n\tid: string;\r\n\tvalue: number;\r\n\twin: boolean;\r\n\tcanPlayerMove: boolean;\r\n\tonClick: (e: any) => void;\r\n\tview: { spaceSize: number };\r\n\ticonConfig: IconConfig;\r\n};\r\n\r\nexport const Space = (props: SpaceProps) => {\r\n\tconst { x, y, id, value, win, canPlayerMove, onClick, view, iconConfig } = props;\r\n\tconst { spaceSize } = view;\r\n\treturn (<button\r\n\t\tid={id}\r\n\t\tonClick={value === 0 && !win && canPlayerMove ? onClick : () => { }}\r\n\t\tclassName=\"space\"\r\n\t\tstyle={{\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: `${spaceSize}px`,\r\n\t\t\theight: `${spaceSize}px`,\r\n\t\t\tleft: `${x * spaceSize}px`,\r\n\t\t\ttop: `${y * spaceSize}px`\r\n\t\t}}\r\n\t>\r\n\t\t{value > 0 && React.createElement(iconConfig.playerIcons[value - 1], { color: iconConfig.playerColors[value - 1] })}\r\n\t</button>);\r\n}","import { IconConfig } from \"./IconConfig\";\r\nimport { Space } from \"./Space\";\r\n\r\nexport const chunkSize = 3;\r\n\r\nexport const Chunk = (props: {\r\n\tchunkX: number;\r\n\tchunkY: number;\r\n\tselectSquare: (e: any) => void;\r\n\tchunkData: number[][];\r\n\tposX: number;\r\n\tposY: number;\r\n\twin: boolean;\r\n\tcanPlayerMove: boolean;\r\n\tview: { spaceSize: number; };\r\n\ticonConfig: IconConfig;\r\n}) => {\r\n\tconst { chunkData, posX, posY, chunkX, chunkY, win, canPlayerMove, view, selectSquare, iconConfig } = props;\r\n\tconst { spaceSize } = view;\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"chunk\"\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\twidth: `${chunkSize * spaceSize}px`,\r\n\t\t\t\theight: `${chunkSize * spaceSize}px`,\r\n\t\t\t\tleft: `${posX * chunkSize * spaceSize}px`,\r\n\t\t\t\ttop: `${posY * chunkSize * spaceSize}px`\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{chunkData.map((col, x) => {\r\n\t\t\t\treturn col.map((cell, y) =>\r\n\t\t\t\t\t<Space\r\n\t\t\t\t\t\tkey={`${x + chunkX * chunkSize}_${y + chunkY * chunkSize}`}\r\n\t\t\t\t\t\tid={`${x + chunkX * chunkSize}_${y + chunkY * chunkSize}`}\r\n\t\t\t\t\t\tvalue={cell}\r\n\t\t\t\t\t\tx={x}\r\n\t\t\t\t\t\ty={y}\r\n\t\t\t\t\t\tonClick={() => selectSquare({ detail: { x: chunkX * chunkSize + x, y: chunkY * chunkSize + y } })}\r\n\t\t\t\t\t\twin={win}\r\n\t\t\t\t\t\tcanPlayerMove={canPlayerMove}\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\ticonConfig={iconConfig}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}","export function flatten(x: number, d: number): number {\r\n\twhile (x < 0)\r\n\t\tx += d;\r\n\treturn x % d;\r\n}\r\n\r\n/* carter code */\r\nexport function fib(n: number): number {\r\n\tif (n === 1 || n === 0)\r\n\t\treturn n;\r\n\telse\r\n\t\treturn fib(n - 2) + fib(n - 1);\r\n}","import { AI } from \"./AI\";\r\nimport { chunkSize } from \"./Chunk\";\r\nimport { fib, flatten } from \"./utils\";\r\n\r\nexport type GameState = {\r\n\tmap: { [key: string]: { x: number, y: number, chunkData: number[][] } };\r\n\tplacements: { x: number, y: number, v: number }[];\r\n\tplayerCount: number;\r\n\twinLength: number;\r\n\tmoveLimit: number;\r\n\tisLimited: boolean;\r\n\tturn: number;\r\n\tdelay: number;\r\n\tAIs: (AI | undefined)[];\r\n};\r\n\r\nfunction horizontalCount(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\tx++;\r\n\t}\r\n\treturn { ps, type: 0 };\r\n}\r\n\r\nfunction verticalCount(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\ty++;\r\n\t}\r\n\treturn { ps, type: 1 };\r\n}\r\n\r\nfunction diagonalUp(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\ty++;\r\n\t\tx++;\r\n\t}\r\n\treturn { ps, type: 2 };\r\n}\r\n\r\nfunction diagonalDown(gameState: GameState, x: number, y: number, v: number) {\r\n\tlet ps = [];\r\n\twhile (getValue(gameState, x, y) === v) {\r\n\t\tps.push({ x, y });\r\n\t\ty--;\r\n\t\tx++;\r\n\t}\r\n\treturn { ps, type: 3 };\r\n}\r\n\r\nexport function getValue(gameState: GameState, x: number, y: number) {\r\n\tconst { map } = gameState;\r\n\tconst chunk = map[Math.floor(x / chunkSize) + '_' + Math.floor(y / chunkSize)];\r\n\tif (chunk === undefined) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn chunk.chunkData[flatten(x, chunkSize)][flatten(y, chunkSize)];\r\n}\r\n\r\nfunction sharePoint(a: { x: number, y: number }[], b: { x: number, y: number }[]) {\r\n\tfor (let i = 0; i < a.length; i++) {\r\n\t\tfor (let j = 0; j < b.length; j++) {\r\n\t\t\tif (a[i].x === b[j].x && a[i].y === b[j].y)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport function calculateLimitScore(gameState: GameState) {\r\n\tconst { playerCount, winLength, placements } = gameState;\r\n\tlet matches: { type: number, ps: { x: number, y: number }[], old?: boolean }[][] = [];\r\n\tfor (let i = 0; i < playerCount; i++) {\r\n\t\tmatches.push([]);\r\n\t}\r\n\tplacements.forEach((placement: { x: number, y: number, v: number }) => {\r\n\t\t[\r\n\t\t\thorizontalCount(gameState, placement.x, placement.y, placement.v),\r\n\t\t\tverticalCount(gameState, placement.x, placement.y, placement.v),\r\n\t\t\tdiagonalUp(gameState, placement.x, placement.y, placement.v),\r\n\t\t\tdiagonalDown(gameState, placement.x, placement.y, placement.v)\r\n\t\t].forEach(e => {\r\n\t\t\tif (e.ps.length < winLength) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet flag = false;\r\n\t\t\tlet removes: number[] = [];\r\n\t\t\tmatches[placement.v - 1].forEach((p: { type: number, ps: { x: number, y: number }[] }, i: number) => {\r\n\t\t\t\tif (p.type === e.type && sharePoint(p.ps, e.ps)) {\r\n\t\t\t\t\tif (p.ps.length < e.ps.length) {\r\n\t\t\t\t\t\tremoves.push(i);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tremoves.forEach(i => matches[placement.v - 1][i].old = true);\r\n\t\t\tif (!flag) {\r\n\t\t\t\tmatches[placement.v - 1].push(e);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tlet playerScores: number[] = [];\r\n\tmatches.map(m => m.filter(e => e.old === undefined));\r\n\tmatches.forEach(e => {\r\n\t\tlet score = 0;\r\n\t\te.forEach(p => {\r\n\t\t\tscore += fib(p.ps.length - winLength + 2);\r\n\t\t});\r\n\t\tplayerScores.push(score);\r\n\t});\r\n\treturn playerScores;\r\n}\r\n\r\nexport function checkWin(gameState: GameState): boolean {\r\n\tif (gameState.placements.length === 0) {\r\n\t\treturn false;\r\n\t}\r\n\tconst { x, y } = gameState.placements[gameState.placements.length - 1];\r\n\tconst { winLength, isLimited, moveLimit } = gameState;\r\n\tif (isLimited) {\r\n\t\tif (moveLimit === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t} else {\r\n\t\tconst check = getValue(gameState, x, y);\r\n\t\tif (check === 0)\r\n\t\t\treturn false;\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tlet s = getValue(gameState, x - i + j, y);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push((x - i + j) + \"_\" + y);\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tconst s = getValue(gameState, x, y - i + j);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push(x + \"_\" + (y - i + j));\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tlet s = getValue(gameState, x - i + j, y - i + j);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push((x - i + j) + \"_\" + (y - i + j));\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < winLength; i++) {\r\n\t\t\tlet squares = [];\r\n\t\t\tfor (let j = 0; j < winLength; j++) {\r\n\t\t\t\tlet s = getValue(gameState, x - i + j, y + i - j);\r\n\t\t\t\tif (s === undefined)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif (s !== check)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tsquares.push((x - i + j) + \"_\" + (y + i - j));\r\n\t\t\t}\r\n\t\t\tif (squares.length === winLength) {\r\n\t\t\t\tsquares.forEach((e) => document.getElementById(e)?.classList.add(\"win-square\"));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport function addChunk(gameState: GameState, x: number, y: number): GameState {\r\n\tconst { map } = gameState;\r\n\tif (map[x + '_' + y] !== undefined) {\r\n\t\treturn gameState;\r\n\t}\r\n\tlet chunkData: number[][] = [];\r\n\tfor (let i = 0; i < chunkSize; i++) {\r\n\t\tchunkData[i] = [];\r\n\t\tfor (let j = 0; j < chunkSize; j++) {\r\n\t\t\tchunkData[i][j] = 0;\r\n\t\t}\r\n\t}\r\n\treturn gameState = {\r\n\t\t...gameState,\r\n\t\tmap: {\r\n\t\t\t...map,\r\n\t\t\t[`${x}_${y}`]: {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tchunkData\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction generateBorderChunks(gameState: GameState, chunkX: number, chunkY: number): GameState {\r\n\tfor (let i = chunkX - 1; i <= chunkX + 1; i++) {\r\n\t\tfor (let j = chunkY - 1; j <= chunkY + 1; j++) {\r\n\t\t\tgameState = { ...gameState, ...addChunk(gameState, i, j) };\r\n\t\t}\r\n\t}\r\n\treturn gameState;\r\n}\r\n\r\nexport function selectSquare(gameState: GameState, x: number, y: number): GameState {\r\n\tconst { turn, moveLimit, placements, playerCount } = gameState;\r\n\tconst chunkX = Math.floor(x / chunkSize);\r\n\tconst chunkY = Math.floor(y / chunkSize);\r\n\tconst v = turn + 1;\r\n\tconst chunk = gameState.map[chunkX + '_' + chunkY];\r\n\tif (chunk === undefined) {\r\n\t\treturn selectSquare(\r\n\t\t\taddChunk(\r\n\t\t\t\tgameState,\r\n\t\t\t\tchunkX,\r\n\t\t\t\tchunkY),\r\n\t\t\tx,\r\n\t\t\ty);\r\n\t}\r\n\tchunk.chunkData[flatten(x, chunkSize)][flatten(y, chunkSize)] = v;\r\n\tgameState = generateBorderChunks(gameState, chunkX, chunkY);\r\n\treturn gameState = {\r\n\t\t...gameState,\r\n\t\tmap: {\r\n\t\t\t...gameState.map,\r\n\t\t\t[chunkX + '_' + chunkY]: chunk\r\n\t\t},\r\n\t\tplacements: [...placements, { x, y, v }],\r\n\t\tturn: (turn + 1) % playerCount,\r\n\t\tmoveLimit: moveLimit - (turn === playerCount - 1 ? 1 : 0)\r\n\t};\r\n}","import React from 'react';\r\nimport { Chunk, chunkSize } from './Chunk';\r\nimport { calculateLimitScore, checkWin, GameState, getValue, selectSquare } from './GameState';\r\nimport { IconConfig } from './IconConfig';\r\nimport { flatten } from './utils';\r\n\r\nconst Limit = (props: { moveLimit: number }) => {\r\n\treturn (<div id=\"limit-dialog\">Turns Left: {props.moveLimit}</div>);\r\n}\r\n\r\nconst ScoreScreen = (props: { playerScores: number[], iconConfig: IconConfig }) => {\r\n\tconst { playerScores, iconConfig } = props;\r\n\treturn (\r\n\t\t<div id=\"score-dialog\">\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{playerScores.map((score, i) => <tr key={i}><td style={{ width: \"40px\" }}>{React.createElement(iconConfig.playerIcons[i], { color: iconConfig.playerColors[i] })}</td><td>{score}</td></tr>)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ntype BoardProps = {\r\n\tgameState: GameState;\r\n\ticonConfig: IconConfig;\r\n\tbroadcast: (gameState: GameState, callback: (gameState: GameState) => void) => void;\r\n\tdoLocalTurn: (gameState: GameState, boardRef: any, turnDelay: number, playerScores: number[]) => void;\r\n\tcanMove: boolean;\r\n};\r\n\r\ntype BoardState = {\r\n\tview: {\r\n\t\toffsetX: number;\r\n\t\toffsetY: number;\r\n\t\tspaceSize: number;\r\n\t};\r\n\txLow: number;\r\n\txHigh: number;\r\n\tyLow: number;\r\n\tyHigh: number;\r\n\tisTouching: boolean;\r\n\ttouchStart: { x: number, y: number };\r\n\ttouchOffset: { x: number, y: number };\r\n\tshiftScroll: boolean;\r\n\tctrlScroll: boolean;\r\n};\r\n\r\nexport class Board extends React.Component<BoardProps, BoardState> {\r\n\tboardRef: React.RefObject<HTMLDivElement>;\r\n\tconstructor(props: BoardProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.selectSquare = this.selectSquare.bind(this);\r\n\t\tthis.postMove = this.postMove.bind(this);\r\n\t\tthis.handleScroll = this.handleScroll.bind(this);\r\n\t\tthis.handleTouchStart = this.handleTouchStart.bind(this);\r\n\t\tthis.handleTouchMove = this.handleTouchMove.bind(this);\r\n\t\tthis.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n\t\tthis.handleZoom = this.handleZoom.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleKeyUp = this.handleKeyUp.bind(this);\r\n\t\tthis.getPlayerScores = this.getPlayerScores.bind(this);\r\n\r\n\t\tthis.boardRef = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tview: {\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\tspaceSize: 50\r\n\t\t\t},\r\n\t\t\txLow: 0,\r\n\t\t\txHigh: 0,\r\n\t\t\tyLow: 0,\r\n\t\t\tyHigh: 0,\r\n\t\t\tisTouching: false,\r\n\t\t\ttouchStart: { x: 0, y: 0 },\r\n\t\t\ttouchOffset: { x: 0, y: 0 },\r\n\t\t\tshiftScroll: false,\r\n\t\t\tctrlScroll: false\r\n\t\t}\r\n\t}\r\n\thandleZoom(v: number) {\r\n\t\tconst { offsetX, offsetY, spaceSize } = this.state.view;\r\n\t\tconst newSpaceSize = Math.max(15, Math.min(160, spaceSize * v));\r\n\t\tthis.setState({\r\n\t\t\tview: {\r\n\t\t\t\toffsetX: offsetX * (newSpaceSize / spaceSize),\r\n\t\t\t\toffsetY: offsetY * (newSpaceSize / spaceSize),\r\n\t\t\t\tspaceSize: newSpaceSize\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleScroll(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst { shiftScroll, ctrlScroll } = this.state;\r\n\t\tconst { offsetX, offsetY, spaceSize } = this.state.view;\r\n\t\tif (ctrlScroll) {\r\n\t\t\tthis.handleZoom(Math.exp(e.deltaY / 200));\r\n\t\t} else {\r\n\t\t\tconst deltaX = e.deltaX * 0.25;\r\n\t\t\tconst deltaY = e.deltaY * 0.25;\r\n\t\t\tthis.setState({\r\n\t\t\t\tview: {\r\n\t\t\t\t\toffsetX: offsetX - (shiftScroll ? deltaY : deltaX),\r\n\t\t\t\t\toffsetY: offsetY - (shiftScroll ? deltaX : deltaY),\r\n\t\t\t\t\tspaceSize: spaceSize\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleTouchMove(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n\t\tconst touch = evt.touches[0] || evt.changedTouches[0];\r\n\t\tthis.setState({\r\n\t\t\ttouchOffset: { x: touch.pageX, y: touch.pageY }\r\n\t\t});\r\n\t}\r\n\thandleTouchStart(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n\t\tconst touch = evt.touches[0] || evt.changedTouches[0];\r\n\t\tthis.setState({\r\n\t\t\tisTouching: true,\r\n\t\t\ttouchStart: { x: touch.pageX, y: touch.pageY },\r\n\t\t\ttouchOffset: { x: touch.pageX, y: touch.pageY }\r\n\t\t});\r\n\t}\r\n\thandleTouchEnd(e: any) {\r\n\t\te.preventDefault();\r\n\t\tconst evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n\t\tconst touch = evt.touches[0] || evt.changedTouches[0];\r\n\t\tconst { view, touchStart, touchOffset } = this.state;\r\n\t\tconst { offsetX, offsetY, spaceSize } = view;\r\n\t\tthis.setState({\r\n\t\t\tisTouching: false,\r\n\t\t\tview: {\r\n\t\t\t\toffsetX: offsetX + (touchOffset.x - touchStart.x),\r\n\t\t\t\toffsetY: offsetY + (touchOffset.y - touchStart.y),\r\n\t\t\t\tspaceSize: spaceSize\r\n\t\t\t}\r\n\t\t}, () => {\r\n\t\t\tif (Math.pow(touchStart.x - touch.pageX, 2) + Math.pow(touchStart.y - touch.pageY, 2) < 10) {\r\n\t\t\t\tif (touch.target.click !== undefined) {\r\n\t\t\t\t\ttouch.target.click();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleKeyDown(e: any) {\r\n\t\tswitch (e.key) {\r\n\t\t\tcase 'Shift':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshiftScroll: true\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Control':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tctrlScroll: true\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\thandleKeyUp(e: any) {\r\n\t\tswitch (e.key) {\r\n\t\t\tcase 'Shift':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshiftScroll: false\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Control':\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tctrlScroll: false\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tgetPlayerScores() {\r\n\t\tconst { gameState, gameState: { isLimited } } = this.props;\r\n\t\treturn isLimited ? calculateLimitScore(gameState) : [];\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener('wheel', this.handleScroll, { passive: false });\r\n\t\twindow.addEventListener('touchstart', this.handleTouchStart, { passive: false });\r\n\t\twindow.addEventListener('touchmove', this.handleTouchMove, { passive: false });\r\n\t\twindow.addEventListener('touchend', this.handleTouchEnd, { passive: false });\r\n\t\twindow.addEventListener('touchcancel', this.handleTouchEnd, { passive: false });\r\n\t\twindow.addEventListener('keydown', this.handleKeyDown, { passive: false });\r\n\t\twindow.addEventListener('keyup', this.handleKeyUp, { passive: false });\r\n\t\tthis.boardRef.current?.addEventListener('selectSquare', this.selectSquare);\r\n\t\tthis.props.doLocalTurn(\r\n\t\t\tthis.props.gameState,\r\n\t\t\tthis.boardRef,\r\n\t\t\tthis.props.gameState.delay,\r\n\t\t\tthis.getPlayerScores());\r\n\t}\r\n\tpostMove(gameState: GameState) {\r\n\t\tconst { iconConfig } = this.props;\r\n\t\tconst { isLimited, playerCount, placements, turn } = gameState;\r\n\t\tif (checkWin(gameState)) {\r\n\t\t\tconst winner =\r\n\t\t\t\tflatten(\r\n\t\t\t\t\t(isLimited ?\r\n\t\t\t\t\t\tcalculateLimitScore(gameState).map((e, i) => ({ e, i })).sort((a, b) => b.e - a.e)[0].i\r\n\t\t\t\t\t\t: turn - 1),\r\n\t\t\t\t\tplayerCount\r\n\t\t\t\t);\r\n\t\t\tplacements.forEach(placement => {\r\n\t\t\t\tlet element = document.getElementById(placement.x + \"_\" + placement.y) as HTMLElement;\r\n\t\t\t\telement.classList.add(\"amoeba-square\");\r\n\t\t\t\tlet shadow = [];\r\n\t\t\t\tif (window.getComputedStyle(element).boxShadow !== \"none\") {\r\n\t\t\t\t\tshadow.push(window.getComputedStyle(element).boxShadow);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x, placement.y + 1) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 0rem 5rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x + 1, placement.y) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x, placement.y + 1) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x + 1, placement.y + 1) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 5rem 5rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x + 1, placement.y) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 5rem 0rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x + 1, placement.y) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x, placement.y - 1) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x + 1, placement.y - 1) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 5rem -5rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x, placement.y - 1) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} 0rem -5rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x - 1, placement.y) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x, placement.y + 1) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x - 1, placement.y + 1) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} -5rem 5rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x - 1, placement.y) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} -5rem 0rem`);\r\n\t\t\t\t}\r\n\t\t\t\tif (getValue(gameState, placement.x - 1, placement.y) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x, placement.y - 1) === 0\r\n\t\t\t\t\t&& getValue(gameState, placement.x - 1, placement.y - 1) === 0) {\r\n\t\t\t\t\tshadow.push(`${iconConfig.playerColors[winner]} -5rem -5rem`);\r\n\t\t\t\t}\r\n\t\t\t\telement.style.boxShadow = shadow.join(\", \");\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.doLocalTurn(\r\n\t\t\t\tgameState,\r\n\t\t\t\tthis.boardRef,\r\n\t\t\t\tgameState.delay,\r\n\t\t\t\tthis.getPlayerScores());\r\n\t\t}\r\n\t}\r\n\tselectSquare(e: any) {\r\n\t\tconst { broadcast, gameState } = this.props;\r\n\t\tconst { x, y } = e.detail;\r\n\t\tdocument.getElementById(x + \"_\" + y)?.classList.add(\"space-pressed\");\r\n\t\tbroadcast(selectSquare(gameState, x, y), this.postMove);\r\n\t}\r\n\trender() {\r\n\t\tconst { iconConfig, canMove, gameState,\r\n\t\t\tgameState: { moveLimit, turn, map, isLimited, playerCount } } = this.props;\r\n\t\tconst { view,\r\n\t\t\tview: { offsetX, offsetY, spaceSize },\r\n\t\t\tisTouching, touchOffset, touchStart,\r\n\t\t\txLow, yLow, xHigh, yHigh\r\n\t\t} = this.state;\r\n\t\tconst width = spaceSize * chunkSize * (xHigh - xLow + 1);\r\n\t\tconst height = spaceSize * chunkSize * (yHigh - yLow + 1);\r\n\t\tconst playerScores = this.getPlayerScores();\r\n\t\tconst win = checkWin(gameState);\r\n\t\treturn (\r\n\t\t\t<div id=\"screen\">\r\n\t\t\t\t<div id=\"player-bar\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground: (win ?\r\n\t\t\t\t\t\t\ticonConfig.playerColors[flatten((isLimited ?\r\n\t\t\t\t\t\t\t\tplayerScores.map((e, i) => ({ e, i })).sort((a, b) => b.e - a.e)[0].i\r\n\t\t\t\t\t\t\t\t: turn - 1), playerCount)]\r\n\t\t\t\t\t\t\t: iconConfig.playerColors[turn])\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"zoom-bar\">\r\n\t\t\t\t\t<button id=\"zoom-in\" onClick={() => this.handleZoom(3 / 2)}>+</button>\r\n\t\t\t\t\t<button id=\"zoom-out\" onClick={() => this.handleZoom(2 / 3)}>-</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{isLimited && <Limit moveLimit={moveLimit} />}\r\n\t\t\t\t{isLimited && <ScoreScreen playerScores={playerScores} iconConfig={iconConfig} />}\r\n\t\t\t\t<button id=\"reset-button\" onClick={() => window.location.reload()}>Reset Game</button>\r\n\t\t\t\t<div className=\"board\" ref={this.boardRef}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"chunk-container\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\twidth: `${width}px`,\r\n\t\t\t\t\t\t\theight: `${height}px`,\r\n\t\t\t\t\t\t\tmarginTop: `${-height / 2 + offsetY + (isTouching ? (touchOffset.y - touchStart.y) : 0)}px`,\r\n\t\t\t\t\t\t\tmarginLeft: `${-width / 2 + offsetX + (isTouching ? (touchOffset.x - touchStart.x) : 0)}px`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Object.values(map).map(value =>\r\n\t\t\t\t\t\t\t<Chunk\r\n\t\t\t\t\t\t\t\ticonConfig={iconConfig}\r\n\t\t\t\t\t\t\t\tkey={value.x + '_' + value.y}\r\n\t\t\t\t\t\t\t\tposX={value.x - xLow}\r\n\t\t\t\t\t\t\t\tposY={value.y - yLow}\r\n\t\t\t\t\t\t\t\tchunkX={value.x}\r\n\t\t\t\t\t\t\t\tchunkY={value.y}\r\n\t\t\t\t\t\t\t\tchunkData={value.chunkData}\r\n\t\t\t\t\t\t\t\tselectSquare={this.selectSquare}\r\n\t\t\t\t\t\t\t\twin={win}\r\n\t\t\t\t\t\t\t\tcanPlayerMove={canMove}\r\n\t\t\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import { Board } from './Board';\nimport { addChunk, GameState } from './GameState';\nimport { AI } from './AI';\nimport React from 'react';\nimport { GameProps } from './GameProps';\n\n// const params = new URLSearchParams(window.location.search);\n\nfunction doLocalTurn(gameState: GameState, boardRef: any, turnDelay: number, playerScores: number[]) {\n\tif (gameState.AIs[gameState.turn] !== undefined) {\n\t\tconst { x, y } = (gameState.AIs[gameState.turn] as AI).doTurn(gameState, playerScores);\n\t\tsetTimeout(\n\t\t\t() => boardRef.current?.dispatchEvent(\n\t\t\t\tnew CustomEvent('selectSquare',\n\t\t\t\t\t{ detail: { x: x, y: y } })),\n\t\t\tturnDelay);\n\t}\n}\n\nclass App extends React.Component<GameProps, GameState> {\n\tconstructor(props: GameProps) {\n\t\tsuper(props);\n\n\t\tconst { winLength, limit, AINames, delay, AISelectOptions } = props;\n\n\t\tconst AIs: (AI | undefined)[] = AINames\n\t\t\t.map((AIName, i) => AIName === \"player\"\n\t\t\t\t? undefined\n\t\t\t\t: new AISelectOptions[AIName](winLength, i + 1, AINames.length));\n\n\t\tthis.state = {\n\t\t\tturn: 0,\n\t\t\tplacements: [],\n\t\t\tmap: {},\n\t\t\tplayerCount: AINames.length,\n\t\t\tmoveLimit: (limit > 0 ? limit : 0),\n\t\t\twinLength: winLength,\n\t\t\tisLimited: limit > 0,\n\t\t\tdelay,\n\t\t\tAIs\n\t\t};\n\n\t\tfor (let i = -1; i <= 1; i++) {\n\t\t\tfor (let j = -1; j <= 1; j++) {\n\t\t\t\tthis.state = { ...this.state, ...addChunk(this.state, i, j) };\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { iconConfig } = this.props;\n\t\tconst { AIs } = this.state;\n\n\t\treturn (<Board\n\t\t\ticonConfig={iconConfig}\n\t\t\tgameState={this.state}\n\t\t\tbroadcast={(gs: GameState, callback: (gs: GameState) => void) => {\n\t\t\t\tthis.setState(gs);\n\t\t\t\tcallback(gs);\n\t\t\t}}\n\t\t\tdoLocalTurn={doLocalTurn}\n\t\t\tcanMove={AIs[this.state.turn] === undefined}\n\t\t/>);\n\t}\n}\n\nexport default App;\n","import { GameState } from \"./GameState\";\r\n\r\nexport class AI {\r\n\twinLength: number;\r\n\ticon: number;\r\n\tpCount: number;\r\n\tconstructor(\r\n\t\twinLength: number,\r\n\t\ticon: number,\r\n\t\tpCount: number\r\n\t) {\r\n\t\tthis.winLength = winLength;\r\n\t\tthis.icon = icon;\r\n\t\tthis.pCount = pCount;\r\n\t}\r\n\tdoTurn(_gameState: GameState, _playerScores: number[]): { x: number, y: number } {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n}","import { GameState } from \"../GameState\";\r\n\r\nexport function countLine(gameState: GameState, x: number, y: number, v: number, dx: number, dy: number, getValue: (gameState: GameState, x: number, y: number) => number, winLength: number): number {\r\n\tlet l = 0;\r\n\tlet i = -1;\r\n\twhile (getValue(gameState, x + i * dx, y + i * dy) === v) {\r\n\t\tlet d = 0;\r\n\t\tlet nx = x + i * dx;\r\n\t\tlet ny = y + i * dy;\r\n\t\twhile (getValue(gameState, nx, ny) === v || (nx === x && ny === y)) {\r\n\t\t\td++;\r\n\t\t\tnx += dx;\r\n\t\t\tny += dy;\r\n\t\t}\r\n\t\tif (d < winLength) {\r\n\t\t\tfor (let j = d; j <= winLength; j++) {\r\n\t\t\t\tlet nx2 = x + (i + j) * dx;\r\n\t\t\t\tlet ny2 = y + (i + j) * dy;\r\n\t\t\t\tif (getValue(gameState, nx2, ny2) !== v && getValue(gameState, nx2, ny2) !== 0) {\r\n\t\t\t\t\td = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d > l) {\r\n\t\t\tl = d;\r\n\t\t}\r\n\t\ti--;\r\n\t}\r\n\treturn l;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport reportWebVitals from './reportWebVitals';\nimport ThemeSelector from './ThemeSelector';\nimport { CircleIcon } from './assets/CircleIcon';\nimport { CrossIcon } from './assets/CrossIcon';\nimport { DiamondIcon } from './assets/DiamondIcon';\nimport { SquareIcon } from './assets/SquareIcon';\nimport { Menu } from './Menu';\nimport App from './App';\nimport { Fuzzy } from './ais/Fuzzy';\nimport { Elk } from './ais/Elk';\nimport { ElkAtt } from './ais/ElkAtt';\nimport { ElkDef } from './ais/ElkDef';\nimport { ElkSurf } from './ais/ElkSurf';\nimport { ElkTimid } from './ais/ElkTimid';\n\nconst AISelectOptions: { [key: string]: any } = {\n\t\"fuzzy\": Fuzzy,\n\t\"elk\": Elk,\n\t\"elkatt\": ElkAtt,\n\t\"elkdef\": ElkDef,\n\t\"elksurf\": ElkSurf,\n\t\"elktimid\": ElkTimid\n};\n\nconst params = new URLSearchParams(window.location.search);\n\nconst openGame = params.get('game');\n\nconst winLength = params.get('win') ? parseInt(params.get('win') as string, 10) : 5;\nconst playerCount = params.get('count') ? parseInt(params.get('count') as string, 10) : 2;\nconst limit = params.get('limit') ? parseInt(params.get('limit') as string, 10) : 0;\nconst delay = params.get('delay') ? parseInt(params.get('delay') as string, 10) : 0;\nlet AINames = []\nfor (let i = 0; i < playerCount; i++) {\n\tAINames.push(params.get(`p${i + 1}`) || 'player');\n}\n\nconst iconConfig = {\n\tplayerColors: [\n\t\t'#5588ff',\n\t\t'#ff3344',\n\t\t\"#33ff44\",\n\t\t'#ffcc33'\n\t],\n\tplayerIcons: [\n\t\tCircleIcon,\n\t\tCrossIcon,\n\t\tDiamondIcon,\n\t\tSquareIcon\n\t]\n};\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeSelector theme={params.get('theme') || 'default'}>\n\t\t\t{openGame ? <App\n\t\t\t\twinLength={winLength}\n\t\t\t\tlimit={limit}\n\t\t\t\tdelay={delay}\n\t\t\t\tAINames={AINames}\n\t\t\t\ticonConfig={iconConfig}\n\t\t\t\tAISelectOptions={AISelectOptions}\n\t\t\t/> : <Menu\n\t\t\t\twinLength={winLength}\n\t\t\t\tlimit={limit}\n\t\t\t\tdelay={delay}\n\t\t\t\tAINames={AINames}\n\t\t\t\ticonConfig={iconConfig}\n\t\t\t\tAISelectOptions={AISelectOptions}\n\t\t\t/>}\n\t\t</ThemeSelector>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine } from \"./utils\";\r\n\r\nexport class Fuzzy extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\theatMap.forEach(h => {\r\n\t\t\t\t\t\tif (h.x === e.x + x && h.y === e.y + y) {\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: Math.max(\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, -1, getValue, this.winLength)),\r\n\t\t\t\t\t\tdef: Math.max(...Array(this.pCount).fill(0).map((_, i) => {\r\n\t\t\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength))\r\n\t\t\t\t\t\t}).filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\tif (highAtt >= this.winLength) {\r\n\t\t\t\treturn attMap[Math.floor(Math.random() * attMap.length)];\r\n\t\t\t}\r\n\t\t\tif (highDef >= this.winLength) {\r\n\t\t\t\treturn defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t\t}\r\n\t\t\treturn highAtt >= highDef ? attMap[Math.floor(Math.random() * attMap.length)] : defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine } from \"./utils\";\r\n\r\nexport class Elk extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\theatMap.forEach(h => {\r\n\t\t\t\t\t\tif (h.x === e.x + x && h.y === e.y + y) {\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: Math.max(\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, -1, getValue, this.winLength)),\r\n\t\t\t\t\t\tdef: Math.max(...Array(this.pCount).fill(0).map((_, i) => {\r\n\t\t\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength))\r\n\t\t\t\t\t\t}).filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\treturn (highAtt - highDef) > 0 ? attMap[Math.floor(Math.random() * attMap.length)] : defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine } from \"./utils\";\r\n\r\nexport class ElkAtt extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\theatMap.forEach(h => {\r\n\t\t\t\t\t\tif (h.x === e.x + x && h.y === e.y + y) {\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: Math.max(\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, -1, getValue, this.winLength)),\r\n\t\t\t\t\t\tdef: Math.max(...Array(this.pCount).fill(0).map((_, i) => {\r\n\t\t\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength))\r\n\t\t\t\t\t\t}).filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\treturn (highAtt - highDef) > -1 ? attMap[Math.floor(Math.random() * attMap.length)] : defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine } from \"./utils\";\r\n\r\nexport class ElkDef extends AI {\r\n\tdoTurn(gameState: GameState) {\r\n\t\tconst { placements } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\theatMap.forEach(h => {\r\n\t\t\t\t\t\tif (h.x === e.x + x && h.y === e.y + y) {\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: Math.max(\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, -1, getValue, this.winLength)),\r\n\t\t\t\t\t\tdef: Math.max(...Array(this.pCount).fill(0).map((_, i) => {\r\n\t\t\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength))\r\n\t\t\t\t\t\t}).filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\treturn (highAtt - highDef) > 1 ? attMap[Math.floor(Math.random() * attMap.length)] : defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine } from \"./utils\";\r\n\r\n// Becomes ElkAtt when winning, ElkDef when losing\r\n\r\nexport class ElkSurf extends AI {\r\n\tdoTurn(gameState: GameState, playerScores: number[]) {\r\n\t\tconst { placements, AIs } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\theatMap.forEach(h => {\r\n\t\t\t\t\t\tif (h.x === e.x + x && h.y === e.y + y) {\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: Math.max(\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, -1, getValue, this.winLength)),\r\n\t\t\t\t\t\tdef: Math.max(...Array(this.pCount).fill(0).map((_, i) => {\r\n\t\t\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength))\r\n\t\t\t\t\t\t}).filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\tlet opponentScores = 0;\r\n\t\t\tlet AIScore = 0;\r\n\t\t\tplayerScores.forEach((score, index) => {\r\n\t\t\t\tif (AIs[index] === this) {\r\n\t\t\t\t\tAIScore = score;\r\n\t\t\t\t} else {\r\n\t\t\t\t\topponentScores += score;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst modif = (opponentScores / (this.pCount - 1)) < AIScore ? -1 : 1;\r\n\t\t\treturn (highAtt - highDef) > modif ? attMap[Math.floor(Math.random() * attMap.length)] : defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t}\r\n\t}\r\n}","import { AI } from \"../AI\";\r\nimport { GameState, getValue } from \"../GameState\";\r\nimport { countLine } from \"./utils\";\r\n\r\n// Becomes ElkDef when winning, ElkAtt when losing\r\n\r\nexport class ElkTimid extends AI {\r\n\tdoTurn(gameState: GameState, playerScores: number[]) {\r\n\t\tconst { placements, AIs } = gameState;\r\n\t\tlet highAtt = 0;\r\n\t\tlet highDef = 0;\r\n\t\tlet heatMap: { x: number; y: number; att: number; def: number; }[] = [];\r\n\t\tplacements.forEach(e => {\r\n\t\t\tfor (let x = -1; x <= 1; x++) {\r\n\t\t\t\tfor (let y = -1; y <= 1; y++) {\r\n\t\t\t\t\tif (x === 0 && y === 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (getValue(gameState, e.x + x, e.y + y) !== 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\theatMap.forEach(h => {\r\n\t\t\t\t\t\tif (h.x === e.x + x && h.y === e.y + y) {\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet o = {\r\n\t\t\t\t\t\tx: e.x + x,\r\n\t\t\t\t\t\ty: e.y + y,\r\n\t\t\t\t\t\tatt: Math.max(\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, this.icon, 1, -1, getValue, this.winLength)),\r\n\t\t\t\t\t\tdef: Math.max(...Array(this.pCount).fill(0).map((_, i) => {\r\n\t\t\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, 0, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, -1, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 0, -1, getValue, this.winLength),\r\n\t\t\t\t\t\t\t\tcountLine(gameState, e.x + x, e.y + y, i + 1, 1, -1, getValue, this.winLength))\r\n\t\t\t\t\t\t}).filter((_, i) => i !== this.icon - 1))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (o.att > highAtt) {\r\n\t\t\t\t\t\thighAtt = o.att;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (o.def > highDef) {\r\n\t\t\t\t\t\thighDef = o.def;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theatMap.push(o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (heatMap.length === 0) {\r\n\t\t\treturn { x: 0, y: 0 };\r\n\t\t} else {\r\n\t\t\tlet maxDef = 0;\r\n\t\t\tlet maxAtt = 0;\r\n\t\t\tlet attMap = heatMap.filter(e => e.att === highAtt);\r\n\t\t\tattMap.forEach(e => {\r\n\t\t\t\tif (e.def > maxDef) {\r\n\t\t\t\t\tmaxDef = e.def;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tattMap = attMap.filter(e => e.def === maxDef);\r\n\t\t\tlet defMap = heatMap.filter(e => e.def === highDef);\r\n\t\t\tdefMap.forEach(e => {\r\n\t\t\t\tif (e.att > maxAtt) {\r\n\t\t\t\t\tmaxAtt = e.att;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdefMap = defMap.filter(e => e.att === maxAtt);\r\n\t\t\tlet opponentScores = 0;\r\n\t\t\tlet AIScore = 0;\r\n\t\t\tplayerScores.forEach((score, index) => {\r\n\t\t\t\tif (AIs[index] === this) {\r\n\t\t\t\t\tAIScore = score;\r\n\t\t\t\t} else {\r\n\t\t\t\t\topponentScores += score;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst modif = (opponentScores / (this.pCount - 1)) < AIScore ? 1 : -1;\r\n\t\t\treturn (highAtt - highDef) > modif ? attMap[Math.floor(Math.random() * attMap.length)] : defMap[Math.floor(Math.random() * defMap.length)];\r\n\t\t}\r\n\t}\r\n}","export const CircleIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<path fill={props.color} d=\"M500,0C223.86,0,0,223.86,0,500s223.86,500,500,500,500-223.86,500-500S776.14,0,500,0Zm0,800c-165.69,0-300-134.31-300-300S334.31,200,500,200,800,334.31,800,500,665.69,800,500,800Z\" />\r\n\t\t</svg>\r\n\t);\r\n}","export const CrossIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<polygon fill={props.color} points=\"1000 858.58 641.42 500 1000 141.42 858.58 0 500 358.58 141.42 0 0 141.42 358.58 500 0 858.58 141.42 1000 500 641.42 858.58 1000 1000 858.58\" />\r\n\t\t</svg>\r\n\t);\r\n}","export const DiamondIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<path fill={props.color} d=\"M500,0,0,500l500,500,500-500Zm0,717.16L282.84,500,500,282.84,717.16,500Z\" transform=\"translate(0 0)\" />\r\n\t\t</svg>\r\n\t);\r\n}","export const SquareIcon = (props: { color: string }) => {\r\n\treturn (\r\n\t\t<svg className=\"player-icon\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\r\n\t\t\t<path fill={props.color} d=\"M0,0V1000H1000V0ZM800,800H200V200H800Z\" />\r\n\t\t</svg>\r\n\t);\r\n}"],"sourceRoot":""}